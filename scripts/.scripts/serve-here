#!/usr/bin/env python3


import argparse
import http.server
import logging
import signal


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument("--ip", type=str, default="0.0.0.0")
    parser.add_argument("--port", type=int, default=8080)
    parser.add_argument(
        "--timeout",
        type=int,
        help="server running duration; unit: second",
        default=60 * 30,
    )
    return parser.parse_args()


def main():
    args = parse_args()

    def terminate(*args):  # pylint: disable=unused-argument
        raise SystemExit("timeout, program exiting")

    logging.info("program will exit in %s seconds", args.timeout)
    signal.signal(signal.SIGALRM, terminate)
    signal.alarm(args.timeout)

    server = http.server.ThreadingHTTPServer
    handler = http.server.SimpleHTTPRequestHandler

    with server((args.ip, args.port), handler) as httpd:
        logging.info("serving http at %s:%d", args.ip, args.port)
        httpd.serve_forever()


if __name__ == "__main__":
    logging.basicConfig(
        level="DEBUG",
        style="{",
        datefmt="%Y-%m-%d %H:%M:%S",
        format="{asctime} {message}",
    )

    main()
